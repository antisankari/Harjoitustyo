Käyttöliittymä
- pelilauta < tehty
- käynnistä nappi < tehty
- parhaan tuloksen näyttö < tehty
- painikkeiden piirto < tehty
- nappien vilkutus järjestyksessä < tehty
- värimaailman muutos
- graafinen näyttö, jossa syötetään pelaajan nimi < tehty


Pelilogiikka
- tason nosto < tehty
- sekvenssi painikkeille < tehty
- sekvenssin osien lisäys < tehty
- pelin sammutus < tehty
- pelin käynnistys < tehty


Pelaaja
- pelaajan nimi < tehty
- pelaajan taso < tehty
- get ja set metodit < tehty
- pelipäivä < tehty
- viimeisimmän läpäistyn tason kesto
- tietojen tallennus ja luku tiedostosta <- omaan luokkaan? < ei siirretä

Ennätyksen hallinta pitää hoitaa. Tarkasta onko uusi tulos parempi kuin tiedostosta luettu. < korjattu
Tarkasta ennätyksen tulostuminen oikein, nyt tapahtuu jotain jännää. < korjattu

Ennätyksen päivittyminen heti tekemättä
Väärästä arvauksesta pelin lopetusruudun piirto < tehty

Pelaaja
    /*
    public static void main(String[] args) {
        //testausta
        //Pelaaja testData = new Pelaaja(1,2,3,0,"Peluri");
        //testData.lueTiedostosta();
        //testData.tallennaTiedostoon();
        //Pelaaja tulostus = new Pelaaja();
        //tulostus.setTaso(10);
        //tulostus.setPisteet(500);
        //tulostus.setPelaajaNimi("testiukkeli");
        //tulostus.tallennaTiedostoon();
        /*
        tulostus.lueTiedostosta();
        Pelaaja ennatysPelaaja = tulostus.lueTiedostosta();
        if (ennatysPelaaja != null) {
            System.out.println(ennatysPelaaja);
        } else {
            System.out.println("asdasd");
        }
    }
     */

Pelilogiikka

    /*
    public static void main(String[] args) {

        //Pelilogiikka testi = new Pelilogiikka();
        //testi.luoSekvenssi(4);
        //System.out.println("|" + testi.sekvenssi.get(2) + "|");
    }

     */